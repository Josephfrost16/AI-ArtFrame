@page "/register"
@rendermode InteractiveServer
@using login.Servicios
@inject UserService UserService
@inject NavigationManager Navigation

<h3>Registro</h3>

<form>
    <div>
        <label>Nombre</label>
        <input type="text" @bind="Name" />
    </div>
    <div>
        <label>Correo</label>
        <input type="email" @bind="Email" />
    </div>
    <div>
        <label>Contraseña</label>
        <input type="password" @bind="Password" />
    </div>
    <div>
        <label>Confirmar Contraseña</label>
        <input type="password" @bind="ConfirmPassword" />
    </div>
    <button type="button" @onclick="Register">Registrar</button>
    <p style="color: red;">@Message</p>
</form>


<button @onclick="GoToLoginPage">Iniciar sesión</button>

@code {
    private string Name { get; set; } = string.Empty;
    private string Email { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;
    private string ConfirmPassword { get; set; } = string.Empty;
    private string Message { get; set; } = string.Empty;

    private async Task Register()
    {
        // Validar campos vacíos
        if (string.IsNullOrWhiteSpace(Name) ||
            string.IsNullOrWhiteSpace(Email) ||
            string.IsNullOrWhiteSpace(Password) ||
            string.IsNullOrWhiteSpace(ConfirmPassword))
        {
            Message = "Todos los campos son obligatorios.";
            return;
        }

        // Validar que las contraseñas coincidan
        if (Password != ConfirmPassword)
        {
            Message = "Las contraseñas no coinciden.";
            return;
        }

        try
        {
            // Registrar el usuario a través del servicio
            await UserService.Register(Name, Email, Password);

            // Limpiar los campos del formulario
            Name = string.Empty;
            Email = string.Empty;
            Password = string.Empty;
            ConfirmPassword = string.Empty;

            // Redirigir a otra página (página de inicio de sesión)
            Navigation.NavigateTo("/");
        }
        catch (Exception ex)
        {
            // Mostrar mensaje de error en caso de excepción
            Message = $"Error: {ex.Message}";
        }
    }

    private void GoToLoginPage()
    {
        // Redirigir a la página de inicio de sesión
        Navigation.NavigateTo("/");
    }
}

